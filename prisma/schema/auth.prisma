model User {
    id            String        @id @default(cuid())
    name          String?
    email         String        @unique
    emailVerified Boolean?      
    image         String?
    role          String?       @default("user") // Better Auth admin plugin field
    banned        Boolean?      @default(false) // Better Auth admin plugin field
    banReason     String?       // Better Auth admin plugin field
    banExpires    DateTime?     // Better Auth admin plugin field
    createdAt     DateTime      @default(now())
    updatedAt     DateTime      @updatedAt
    applications  Application[] @relation("UserApplications")
    apiKeys       ApiKey[]
    auditLogs     AuditLog[]
    accounts      Account[]
    sessions      Session[]
}

model Account {
    id                String   @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    createdAt         DateTime @default(now())
    updatedAt         DateTime @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id          String   @id @default(cuid())
    token       String   @unique
    userId      String
    expiresAt   DateTime
    ipAddress   String?
    userAgent   String?
    impersonatedBy String? // Better Auth admin plugin field (optional)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model verification {
    id         String   @id @default(cuid())
    identifier String
    value      String
    expiresAt  DateTime
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt

    @@unique([identifier, value])
}
